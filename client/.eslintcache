[{"F:\\Crash Courses\\react-default-settings\\src\\index.js":"1","F:\\Crash Courses\\react-default-settings\\src\\reportWebVitals.js":"2","F:\\Crash Courses\\react-default-settings\\src\\App.js":"3","F:\\React - myProjects\\mern-auth\\client\\src\\index.js":"4","F:\\React - myProjects\\mern-auth\\client\\src\\App.js":"5","F:\\React - myProjects\\mern-auth\\client\\src\\core\\Layout.js":"6","F:\\React - myProjects\\mern-auth\\client\\src\\Routes.js":"7","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Signup.js":"8","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Signin.js":"9","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Activate.js":"10","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\helpers.js":"11","F:\\React - myProjects\\mern-auth\\client\\src\\core\\Private.js":"12","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\PrivateRoute.js":"13","F:\\React - myProjects\\mern-auth\\client\\src\\core\\Admin.js":"14","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\AdminRoute.js":"15","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\ForgotPassword.js":"16","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\ResetPassword.js":"17","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Google.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":528,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":160,"mtime":1618816055685,"results":"23","hashOfConfig":"24"},{"size":581,"mtime":1619333263667,"results":"25","hashOfConfig":"24"},{"size":2041,"mtime":1619081042420,"results":"26","hashOfConfig":"24"},{"size":1300,"mtime":1619270066844,"results":"27","hashOfConfig":"24"},{"size":2694,"mtime":1619010997025,"results":"28","hashOfConfig":"24"},{"size":2974,"mtime":1619336202884,"results":"29","hashOfConfig":"24"},{"size":1759,"mtime":1619076714292,"results":"30","hashOfConfig":"24"},{"size":1993,"mtime":1619179786744,"results":"31","hashOfConfig":"24"},{"size":3880,"mtime":1619179824005,"results":"32","hashOfConfig":"24"},{"size":575,"mtime":1619081182853,"results":"33","hashOfConfig":"24"},{"size":3871,"mtime":1619180307363,"results":"34","hashOfConfig":"24"},{"size":568,"mtime":1619080591212,"results":"35","hashOfConfig":"24"},{"size":2012,"mtime":1619264068918,"results":"36","hashOfConfig":"24"},{"size":2283,"mtime":1619270794546,"results":"37","hashOfConfig":"24"},{"size":1124,"mtime":1619336903247,"results":"38","hashOfConfig":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12x5esq",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1ow1jc8",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Crash Courses\\react-default-settings\\src\\index.js",[],"F:\\Crash Courses\\react-default-settings\\src\\reportWebVitals.js",[],"F:\\Crash Courses\\react-default-settings\\src\\App.js",[],"F:\\React - myProjects\\mern-auth\\client\\src\\index.js",[],["83","84"],"F:\\React - myProjects\\mern-auth\\client\\src\\App.js",[],"F:\\React - myProjects\\mern-auth\\client\\src\\core\\Layout.js",[],"F:\\React - myProjects\\mern-auth\\client\\src\\Routes.js",[],"F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Signup.js",["85"],"import { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport axios from \"axios\";\r\nimport { isAuth } from \"./helpers\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nexport default function Signup() {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    buttonText: \"Submit\",\r\n  });\r\n\r\n  const { name, email, password, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // console.log(event.target.value);\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${process.env.REACT_APP_API}/signup`,\r\n      data: { name, email, password },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"SIGNUP SUCCESS\", response);\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          buttonText: \"Submitted\",\r\n        });\r\n        toast.success(response.data.message);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(\"SIGNUP ERROR\", error.response.data);\r\n        setValues({ ...values, buttonText: \"Submit\" });\r\n        toast.error(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const signupForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          value={name}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Email</label>\r\n        <input\r\n          onChange={handleChange(\"email\")}\r\n          value={email}\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          onChange={handleChange(\"password\")}\r\n          value={password}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <ToastContainer />\r\n        {isAuth() ? <Redirect to=\"/\" /> : null}\r\n        <h1 className=\"p-5\">Signup</h1>\r\n        {signupForm()}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Signin.js",[],"F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Activate.js",["86","87","88","89"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nconst Activate = ({ match }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    show: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { name } = jwt.decode(token);\r\n    console.log(token);\r\n    if (token) {\r\n      setValues({ ...values, name, token });\r\n    }\r\n  }, []);\r\n\r\n  const { name, token, show } = values;\r\n\r\n  const clickSubmit = (event) => {\r\n    console.log(`hello`);\r\n    event.preventDefault();\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${process.env.REACT_APP_API}/account-activation`,\r\n      data: { token },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"ACCOUNT ACTIVATION\", response);\r\n        setValues({ ...values, show: false });\r\n        toast.success(response.data.message);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ACCOUNT ACTIVATION ERROR\", error.response.data.error);\r\n        toast.error(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const activationLink = () => (\r\n    <div className=\"text-center\">\r\n      <h1 className=\"p-5\">Hey {name}, Ready to activate your account?</h1>\r\n      <button className=\"btn btn-outline-primary\" onClick={clickSubmit}>\r\n        Activate Account\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <ToastContainer />\r\n        {activationLink()}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Activate;\r\n","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\helpers.js",[],"F:\\React - myProjects\\mern-auth\\client\\src\\core\\Private.js",["90","91","92"],"import { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport axios from \"axios\";\r\nimport { isAuth, getCookie, signout, updateUser } from \"../auth/helpers\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nexport default function Private({ history }) {\r\n  const [values, setValues] = useState({\r\n    role: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    buttonText: \"Submit\",\r\n  });\r\n\r\n  const token = getCookie(`token`);\r\n\r\n  useEffect(() => {\r\n    loadProfile();\r\n  }, []);\r\n\r\n  const loadProfile = () => {\r\n    axios({\r\n      method: `GET`,\r\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // console.log(`Private Profile Update`, response);\r\n        const { role, name, email } = response.data;\r\n        setValues({ ...values, role, name, email });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(`Private profile update error`, error.response.data.error);\r\n        if (error.response.status === 401) {\r\n          signout(() => {\r\n            history.push(`/`);\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const { role, name, email, password, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // console.log(event.target.value);\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n    axios({\r\n      method: \"PUT\",\r\n      url: `${process.env.REACT_APP_API}/user/update`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      data: { name, email, password },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Profile Update SUCCESS\", response);\r\n        updateUser(response, () => {\r\n          setValues({\r\n            ...values,\r\n            buttonText: \"Submitted\",\r\n          });\r\n          toast.success(`Profile has been updated successfully`);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(\"Profile Update ERROR\", error.response.data);\r\n        setValues({ ...values });\r\n        toast.error(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const privateForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Role</label>\r\n        <input\r\n          defaultValue={role}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          disabled\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          value={name}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Email</label>\r\n        <input\r\n          defaultValue={email}\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          disabled\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          onChange={handleChange(\"password\")}\r\n          value={password}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <ToastContainer />\r\n        <h1 className=\"pt-5 text-center\">Private</h1>\r\n        <p className=\"lead text-center\">Profile Update</p>\r\n        {privateForm()}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\PrivateRoute.js",["93"],"import { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"./helpers\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuth() && isAuth().role === `subscriber` ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n","F:\\React - myProjects\\mern-auth\\client\\src\\core\\Admin.js",["94","95","96"],"import { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport axios from \"axios\";\r\nimport { isAuth, getCookie, signout, updateUser } from \"../auth/helpers\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nexport default function Admin({ history }) {\r\n  const [values, setValues] = useState({\r\n    role: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    buttonText: \"Submit\",\r\n  });\r\n\r\n  const token = getCookie(`token`);\r\n\r\n  useEffect(() => {\r\n    loadProfile();\r\n  }, []);\r\n\r\n  const loadProfile = () => {\r\n    axios({\r\n      method: `GET`,\r\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // console.log(`Private Profile Update`, response);\r\n        const { role, name, email } = response.data;\r\n        setValues({ ...values, role, name, email });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(`Private profile update error`, error.response.data.error);\r\n        if (error.response.status === 401) {\r\n          signout(() => {\r\n            history.push(`/`);\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const { role, name, email, password, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // console.log(event.target.value);\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n    axios({\r\n      method: \"PUT\",\r\n      url: `${process.env.REACT_APP_API}/admin/update`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      data: { name, email, password },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Profile Update SUCCESS\", response);\r\n        updateUser(response, () => {\r\n          setValues({\r\n            ...values,\r\n            buttonText: \"Submitted\",\r\n          });\r\n          toast.success(`Profile has been updated successfully`);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(\"Profile Update ERROR\", error.response.data);\r\n        setValues({ ...values });\r\n        toast.error(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const adminForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Role</label>\r\n        <input\r\n          defaultValue={role}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          disabled\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          value={name}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Email</label>\r\n        <input\r\n          defaultValue={email}\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          disabled\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          onChange={handleChange(\"password\")}\r\n          value={password}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <ToastContainer />\r\n        <h1 className=\"pt-5 text-center\">Admin</h1>\r\n        <p className=\"lead text-center\">Admin Update</p>\r\n        {adminForm()}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\AdminRoute.js",["97"],"import { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"./helpers\";\r\n\r\nexport default function AdminRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuth() && isAuth().role === `admin` ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\ForgotPassword.js",[],"F:\\React - myProjects\\mern-auth\\client\\src\\auth\\ResetPassword.js",["98"],"import { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nexport default function ResetPassword({ match }) {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    newPassword: \"\",\r\n    buttonText: \"Reset Password\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { name } = jwt.decode(token);\r\n    if (token) {\r\n      setValues({ ...values, name, token });\r\n    }\r\n  }, []);\r\n\r\n  const { name, token, newPassword, buttonText } = values;\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, newPassword: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, buttonText: \"Resetting\" });\r\n    axios({\r\n      method: \"PUT\",\r\n      url: `${process.env.REACT_APP_API}/reset-password`,\r\n      data: { newPassword, resetPasswordLink: token },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Reset Password Success\", response);\r\n        toast.success(response.data.message);\r\n        setValues({ ...values, buttonText: `Done` });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(\"Reset Password ERROR\", error.response.data);\r\n        toast.error(error.response.data.error);\r\n        setValues({ ...values, buttonText: \"Reset Password\" });\r\n      });\r\n  };\r\n\r\n  const passwordResetForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          onChange={handleChange}\r\n          value={newPassword}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      {/* {JSON.stringify(isAuth())} */}\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <ToastContainer />\r\n        <h1 className=\"p-5\">Hey, {name}. Type your new Password.</h1>\r\n        {passwordResetForm()}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","F:\\React - myProjects\\mern-auth\\client\\src\\auth\\Google.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":23,"column":6,"nodeType":"110","endLine":23,"endColumn":8,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":25,"column":24,"nodeType":"105","messageId":"106","endLine":25,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"108","severity":1,"message":"113","line":22,"column":6,"nodeType":"110","endLine":22,"endColumn":8,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"115","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"108","severity":1,"message":"113","line":22,"column":6,"nodeType":"110","endLine":22,"endColumn":8,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"115","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":22,"column":6,"nodeType":"110","endLine":22,"endColumn":8,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["120"],"'show' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProfile'. Either include it or remove the dependency array.",["121"],"'Component' is defined but never used.",["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"124","fix":"129"},"Update the dependencies array to be: [match.params.token, values]",{"range":"130","text":"131"},"Update the dependencies array to be: [loadProfile]",{"range":"132","text":"133"},{"range":"134","text":"133"},{"range":"135","text":"131"},[648,650],"[match.params.token, values]",[627,629],"[loadProfile]",[625,627],[621,623]]